{
  "name": "istari",
  "displayName": "istari",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "istari",
        "extensions": [
          ".ist"
        ]
      }
    ],
    "grammars": [
      {
        "language": "istari",
        "scopeName": "source.ist",
        "path": "./syntaxes/ist.tmGrammar.json"
      }
    ],
    "configuration": {
      "title": "Locations",
      "properties": {
        "istari.smlLocation": {
          "type": "string",
          "default": "sml",
          "description": "Command to run sml"
        },
        "istari.istariLocation": {
          "type": "string",
          "default": "",
          "description": "File location of starisrv-heapimg"
        }
      }
    },
    "commands": [
      {
        "command": "istari.prevLine",
        "title": "Istari: Previous Line",
        "icon": "$(arrow-up)"
      },
      {
        "command": "istari.nextLine",
        "title": "Istari: Next Line",
        "icon": "$(arrow-down)"
      },
      {
        "command": "istari.jumpToCursor",
        "title": "Istari: Jump To Cursor",
        "icon": "$(arrow-right)"
      },
      {
        "command": "istari.getType",
        "title": "Istari: Get Type of a Constant"
      },
      {
        "command": "istari.search",
        "title": "Istari: Find All Constants that Mention Targets",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "istari.init",
        "title": "Istari: Init",
        "icon": "$(refresh)"
      },
      {
        "command": "istari.jumpCursor",
        "title": "Istari: Jump Cursor to Verifed"
      },
      {
        "command": "istari.interject",
        "title": "Istari: Interject with IML Code"
      },
      {
        "command": "istari.showCurrentGoals",
        "title": "Istari: Show Current Goals"
      },
      {
        "command": "istari.showCurrentGoalsVerbosely",
        "title": "Istari: Show Current Goals Verbosely"
      },
      {
        "command": "istari.details",
        "title": "Istari: Give Detail on Current Goal"
      },
      {
        "command": "istari.getDefinition",
        "title": "Istari: Get Definition of a Constant",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "istari.listConstantsModule",
        "title": "Istari: List All Constants in an Istari Module"
      },
      {
        "command": "istari.listConstants",
        "title": "Istari: List All Constants"
      }
    ],
    "keybindings": [
      {
        "command": "istari.nextLine",
        "key": "ctrl+c ctrl+n",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.nextLine",
        "key": "f4",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.prevLine",
        "key": "ctrl+c ctrl+p",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.prevLine",
        "key": "ctrl+c ctrl+u",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.prevLine",
        "key": "f5",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.jumpToCursor",
        "key": "ctrl+enter",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.jumpToCursor",
        "key": "ctrl+c enter",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.jumpCursor",
        "key": "ctrl+c .",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.interject",
        "key": "ctrl+c x",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.showCurrentGoals",
        "key": "ctrl+c s",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.showCurrentGoalsVerbosely",
        "key": "ctrl+c Shift+s",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.details",
        "key": "ctrl+c ctrl+d",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.getType",
        "key": "ctrl+c r t",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.getDefinition",
        "key": "ctrl+c r s",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.listConstantsModule",
        "key": "ctrl+c r m",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.listConstants",
        "key": "ctrl+c r a",
        "when": "resourceLangId == istari"
      },
      {
        "command": "istari.search",
        "key": "ctrl+c r f",
        "when": "resourceLangId == istari"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "resourceLangId == istari",
          "command": "istari.jumpToCursor",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == istari",
          "command": "istari.prevLine",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == istari",
          "command": "istari.nextLine",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == istari",
          "command": "istari.getDefinition",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == istari",
          "command": "istari.search",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == istari",
          "command": "istari.init",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@types/vscode": "^1.93.0",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.31.0",
    "@typescript-eslint/parser": "^5.31.0",
    "eslint": "^8.20.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.7.4",
    "@vscode/test-electron": "^2.1.5"
  }
}